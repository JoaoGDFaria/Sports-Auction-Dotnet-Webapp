@page "/auctions/{page:int?}"
@rendermode InteractiveServer

@inject IConfiguration _config
@inject ISqlDataAccess _data
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components

@using DataLibrary

<PageTitle>Auctions</PageTitle>
    
    <Header />

    <div class="cont">
        <div class="btn-group-vertical fixed-button" role="group" aria-label="Vertical button group">
            <div class="btn-group dropup" role="group">
                <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                  Categories
                </button>
                <ul class="dropdown-menu scrollable-dropdown-menu">
                    <li><a class="dropdown-item" href="#">AAA</a></li>
                    <li><a class="dropdown-item" href="#">BBB</a></li>
                    <li><a class="dropdown-item" href="#">CCC</a></li>
                    <li><a class="dropdown-item" href="#">DDD</a></li>
                    <li><a class="dropdown-item" href="#">EEE</a></li>
                    <li><a class="dropdown-item" href="#">AAA</a></li>
                    <li><a class="dropdown-item" href="#">BBB</a></li>
                    <li><a class="dropdown-item" href="#">CCC</a></li>
                    <li><a class="dropdown-item" href="#">DDD</a></li>
                    <li><a class="dropdown-item" href="#">EEE</a></li>
                </ul>
            </div>
        </div>
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
            @if (leiloes.Count != 0)
            {

                @for (int i = pagination.GetStartIndex(); i <= pagination.GetEndIndex(); i++){


                    Leilao leilao = leiloes[i];


                    <button class="itemButton" @onclick="() => RedirectToAuction(leilao.GetIdLeilao())">
                        <div class="item row g-0 ">
                                
                            <div class="imagem col-md-4 ">
                                <img src="./images/item1.webp" class="img-fluid " >
                            </div>

                            <div class="itemInfo col-md-8">
                                <h5 class="itemTitle">@leilao.GetNomeLeilao()</h5>
                                <p class="currentBid">Current bid:</p>
                                @if (leilao.GetHighestBid() == 0){ <p class="bid">None</p> }
                                else{ <p class="bid">$@leilao.GetHighestBid()</p> }
                                <p class="buyNow">Buy Now:</p>
                                <p class="buyNowPrice">$@leilao.GetPrecoCompraAutomaticoLeilao()</p>
                                <p class="timeLeft">Time left:</p>
                                <p class="itemTime"><small class="text-body-secondary">@leilao.GetTimeLeft()</small></p>
                            </div>
                                
                        </div>
                    </button>
                }
            }

        </div> 

        @if (leiloes.Count != 0){
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center mt-4">
                    @if ((pagination.GetCurrentPage() - 1) < 1){
                        <li class="page-item disabled"><a class="page-link" href="auctions/@(pagination.GetCurrentPage()-1)">Previous</a></li>
                    }
                    else{
                        <li class="page-item"><a class="page-link" href="auctions/@(pagination.GetCurrentPage()-1)">Previous</a></li>
                    }
                    @for (int i = 1; i <= pagination.GetTotalPages(); i++){
                        int currentPage = i;
                        @if (currentPage == 1){
                            <a class="page-link" href="auctions">@i</a>
                        }
                        else{
                            <a class="page-link" href="auctions/@currentPage">@i</a>
                        }
                    }
                    @if ((pagination.GetCurrentPage() + 1) > pagination.GetTotalPages()){
                        <li class="page-item disabled"><a class="page-link" href="auctions/@(pagination.GetCurrentPage()+1)">Next</a></li>
                    }
                    else{
                        <li class="page-item"><a class="page-link" href="auctions/@(pagination.GetCurrentPage()+1)">Next</a></li>
                    }
                    
                </ul>
            </nav>
        }

        <a href="./login"  target="_top"><button type="button" class="btn btn-warning">LOG OUT</button></a>
        
    </div>

    <div class="container">
        <footer class="d-flex flex-wrap justify-content-between align-items-center py-3 my-4">

        </footer>
    </div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
<link rel="stylesheet" href="css/auctions.css">


@code {

    [Parameter] public int? page { get; set; }

    private List<Leilao> leiloes= new List<Leilao>();
    private Pagination pagination = new Pagination();

    protected override async Task OnInitializedAsync()
    {
        await LoadAuctions();


        _ = Task.Run(async () =>
        {
            while (true)
            {
                await Task.Delay(TimeSpan.FromMinutes(1));
                await InvokeAsync(() => StateHasChanged());
                Console.WriteLine("State has changed");
            }
        });
    }

    private async Task LoadAuctions()
    {
        DatabaseQueries dbQuery = new DatabaseQueries(_config, _data);
        leiloes = await dbQuery.GetAllAuctionsWithoutUser(567890123451); //TEST ONLY
        
        pagination = new Pagination(leiloes.Count);
        bool flag = pagination.SetCurrentPage(GetCurrentPage());

        if (!flag)
        {
            NavigationManager.NavigateTo("/notfound");
        }
        

    }

    private int GetCurrentPage(){
        var currentUrl = NavigationManager.Uri;
        var pageStr = currentUrl.Split("/").Last();
        if (int.TryParse(pageStr, out var currentPage)){
            return currentPage;
        }
        else{
            return 1;
        }
    }


    void RedirectToAuction(int auctionId)
    {
        NavigationManager.NavigateTo($"/buyMenu/{auctionId}");
    }


}
