@page "/signup"
@rendermode InteractiveServer

@inject IConfiguration _config
@inject ISqlDataAccess _data

@using DataLibrary

<PageTitle>Register</PageTitle>


<div id="register" class="d-flex align-items-center justify-content-center vh-80">
        <div class="card bg-dark text-white">
            <div class="card-body p-5 text-center aux">
                <img class="mb-4" src="./images/logo.png" alt="" width="100">
                <h2 class="fw-bold mb-2 text-uppercase">SIGN UP</h2>
                <br/>
                <form>
                    <div class="form-outline form-white mb-4 field1">
                        <label class="form-label" for="typeEmailX">FIRST NAME</label>
                            <input type="text" id="typeEmailX" class="form-control form-control-lg"  @bind="PrimeiroNome"/>
                        </div>
                        <div class="form-outline form-white mb-4 field2">
                            <label class="form-label" for="typePasswordX">LAST NAME</label>
                            <input type="text" id="typePasswordX" class="form-control form-control-lg"  @bind="UltimoNome"/>
                        </div>
                        <div class="form-outline form-white mb-4 field1">
                            <label class="form-label" for="typePasswordX">EMAIL</label>
                            <input type="email" id="typePasswordX" class="form-control form-control-lg"  @bind="Email"/>
                        </div>
                        <div class="form-outline form-white mb-4 field2">
                            <label class="form-label" for="typePasswordX">PASSWORD</label>
                            <input type="password" id="typePasswordX" class="form-control form-control-lg"  @bind="PalavraPasse"/>
                        </div>
                        <div class="form-outline form-white mb-4 field1">
                            <label class="form-label" for="typePasswordX">ADDRESS</label>
                            <input type="text" id="typePasswordX" class="form-control form-control-lg"  @bind="Morada"/>
                        </div>
                        <div class="form-outline form-white mb-4 field2">
                            <label class="form-label" for="typePasswordX">PHONE NUMBER</label>
                            <input type="text" id="typePasswordX" class="form-control form-control-lg"  @bind="NumeroTelemovel"/>
                        </div>
                        <div class="form-outline form-white mb-4">
                            <label class="form-label" for="typePasswordX">BANK IDENTIFICATION NUMBER</label>
                            <input type="text" id="typePasswordX" class="form-control form-control-lg"  @bind="NIB"/>
                        </div>
                    </form>

                    <div class="hyperlink">
                        <p class="mb-0">Already have an account? <a href="@("/login")" class="text-white-50 fw-bold click">Log In</a>!</p>
                        <br/>
                    </div>


                    <div class="button d-flex justify-content-between buttons">
                        <button type="button" class="btn btn-danger">EXIT</button>
                        <button type="button" class="btn btn-success" @onclick="SubmitForm">SUBMIT</button>
                </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
<link rel="stylesheet" href="css/register.css">

@code {
    private string PrimeiroNome {get; set;} = string.Empty;
    
    private string UltimoNome {get; set;} = string.Empty;
    private string Email {get; set;} = string.Empty;
    private string PalavraPasse {get; set;} = string.Empty;
    private string Morada {get; set;} = string.Empty;
    private string NumeroTelemovel {get; set;} = string.Empty;
    private string NIB {get; set;} = string.Empty;


    private async Task SubmitForm()
    {
        Test test = new Test(_config, _data);
        int rowsAffected = await test.RegisterUser(PrimeiroNome, UltimoNome, Email, PalavraPasse, Morada, NumeroTelemovel, NIB);

        if (rowsAffected > 0)
        {
            // Inserção bem-sucedida, você pode adicionar lógica adicional aqui.
            Console.WriteLine("Utilizador inserido com sucesso!");
        }
        else
        {
            // Falha na inserção, você pode adicionar lógica adicional aqui.
            Console.WriteLine("Falha ao inserir utilizador.");
        }
    }

}
